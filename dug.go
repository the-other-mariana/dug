package main

import (
	"github.com/joho/godotenv"
	"os"
	"fmt"
	"log"
	"net/http"
	"encoding/json"
	"io/ioutil"
)

func main(){
	err := godotenv.Load()
  	if err != nil {
    	log.Fatal("Error loading .env file")
  	}
	gitToken := os.Getenv("GITHUB_ACCESS_TOKEN")
	user := os.Getenv("GITHUB_USER")
	repo := os.Getenv("GITHUB_REPOSITORY")
	repo_path := os.Getenv("REPO_PATH")

	// Generated by curl-to-Go: https://mholt.github.io/curl-to-go
	// curl -H "Accept: application/vnd.github+json" -H "Authorization: Bearer <YOUR_TOKEN>" https://api.github.com/repos/[user_name]/[repo_name]/contents/[path]

	url := fmt.Sprintf("https://api.github.com/repos/%v/%v/contents/%v", user, repo, repo_path)
	req, err := http.NewRequest("GET", url, nil)
	if err != nil {
		// handle err
	}

	bearer := fmt.Sprintf("Bearer %v", gitToken)
	req.Header.Set("Accept", "application/vnd.github+json")
	req.Header.Set("Authorization", bearer)

	resp, err := http.DefaultClient.Do(req)
	if err != nil {
		// handle err
		log.Fatal("Error at curl request")
	}
	var data []map[string]interface{}
	body, err := ioutil.ReadAll(resp.Body)
	err = json.Unmarshal([]byte(body), &data)
	if err != nil {
		log.Fatal("Error at parsing json response")
		panic(err)
	}
	fmt.Printf("Files found: %v\n", len(data))
	fmt.Println("Choose the file:")
	for i := 0; i < len(data); i++ {
		fmt.Printf("%v. %v\n", (i+1), data[i]["name"])
	}
	defer resp.Body.Close()

}